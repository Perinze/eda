$date
	Thu Nov 17 22:10:46 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ms
$end
$scope module tb $end
$var wire 1 ! ticket $end
$var wire 1 " ten_output $end
$var wire 1 # one_output $end
$var reg 1 $ clk $end
$var reg 8 % count [7:0] $end
$var reg 8 & dest [7:0] $end
$var reg 1 ' done $end
$var reg 1 ( one_insert $end
$var reg 1 ) rst_n $end
$var reg 1 * ten_insert $end
$scope module v0 $end
$var wire 1 $ clk $end
$var wire 1 ( coin_one_in_pulse $end
$var wire 1 * coin_ten_in_pulse $end
$var wire 1 ' done $end
$var wire 8 + input_count [7:0] $end
$var wire 8 , input_dest [7:0] $end
$var wire 1 ) rst_n $end
$var wire 8 - total_price [7:0] $end
$var wire 8 . total_insert [7:0] $end
$var wire 1 ! ticket_pulse $end
$var wire 8 / output_ticket_count [7:0] $end
$var wire 1 0 done_oneshot $end
$var wire 1 " coin_ten_out_pulse $end
$var wire 8 1 coin_ten_cnt [7:0] $end
$var wire 1 # coin_one_out_pulse $end
$var wire 8 2 coin_one_cnt [7:0] $end
$var wire 8 3 checked_input_ticket_count [7:0] $end
$var wire 8 4 change_ten_cnt [7:0] $end
$var wire 8 5 change_price [7:0] $end
$var wire 8 6 change_one_cnt [7:0] $end
$scope module change_one_pulser $end
$var wire 1 $ clk $end
$var wire 8 7 in [7:0] $end
$var wire 8 8 minus_one [7:0] $end
$var wire 8 9 nxt_cnt [7:0] $end
$var wire 1 # qout $end
$var wire 1 ) rst_n $end
$var wire 1 : pos $end
$var wire 1 0 lden $end
$var wire 8 ; cur_cnt [7:0] $end
$scope module cnt_dffr $end
$var wire 1 $ clk $end
$var wire 8 < dnxt [7:0] $end
$var wire 1 ) rst_n $end
$var wire 8 = qout [7:0] $end
$var reg 8 > qout_r [7:0] $end
$scope begin DFFR_PROC $end
$upscope $end
$upscope $end
$upscope $end
$scope module change_ten_pulser $end
$var wire 1 $ clk $end
$var wire 8 ? in [7:0] $end
$var wire 8 @ minus_one [7:0] $end
$var wire 8 A nxt_cnt [7:0] $end
$var wire 1 " qout $end
$var wire 1 ) rst_n $end
$var wire 1 B pos $end
$var wire 1 0 lden $end
$var wire 8 C cur_cnt [7:0] $end
$scope module cnt_dffr $end
$var wire 1 $ clk $end
$var wire 8 D dnxt [7:0] $end
$var wire 1 ) rst_n $end
$var wire 8 E qout [7:0] $end
$var reg 8 F qout_r [7:0] $end
$scope begin DFFR_PROC $end
$upscope $end
$upscope $end
$upscope $end
$scope module coin_one_counter $end
$var wire 1 ( clk $end
$var wire 8 G nxt_cnt [7:0] $end
$var wire 8 H qout [7:0] $end
$var wire 1 ) rst_n $end
$var wire 8 I cur_cnt [7:0] $end
$scope module cnt_dffr $end
$var wire 1 ( clk $end
$var wire 8 J dnxt [7:0] $end
$var wire 1 ) rst_n $end
$var wire 8 K qout [7:0] $end
$var reg 8 L qout_r [7:0] $end
$scope begin DFFR_PROC $end
$upscope $end
$upscope $end
$upscope $end
$scope module coin_ten_counter $end
$var wire 1 * clk $end
$var wire 8 M nxt_cnt [7:0] $end
$var wire 8 N qout [7:0] $end
$var wire 1 ) rst_n $end
$var wire 8 O cur_cnt [7:0] $end
$scope module cnt_dffr $end
$var wire 1 * clk $end
$var wire 8 P dnxt [7:0] $end
$var wire 1 ) rst_n $end
$var wire 8 Q qout [7:0] $end
$var reg 8 R qout_r [7:0] $end
$scope begin DFFR_PROC $end
$upscope $end
$upscope $end
$upscope $end
$scope module dest_device $end
$var wire 8 S count [7:0] $end
$var wire 8 T dest [7:0] $end
$var wire 1 U valid $end
$var wire 8 V total [7:0] $end
$var wire 8 W ticket [7:0] $end
$var wire 8 X price [7:0] $end
$var wire 8 Y dist [7:0] $end
$var wire 8 Z diff [7:0] $end
$scope module abs_dist $end
$var wire 8 [ abs [7:0] $end
$var wire 8 \ in [7:0] $end
$var wire 1 ] neg $end
$var wire 8 ^ out [7:0] $end
$upscope $end
$upscope $end
$scope module diff_device $end
$var wire 8 _ change_price [7:0] $end
$var wire 1 ` enough $end
$var wire 8 a input_count [7:0] $end
$var wire 8 b output_count [7:0] $end
$var wire 8 c total_insert [7:0] $end
$var wire 8 d total_price [7:0] $end
$var wire 8 e diff [7:0] $end
$upscope $end
$scope module done_shooter $end
$var wire 1 $ clk $end
$var wire 1 f curr $end
$var wire 1 ' in $end
$var wire 1 0 out $end
$var wire 1 g prev $end
$scope module oneshot_dffrs $end
$var wire 1 f dnxt $end
$var wire 1 $ lden $end
$var wire 1 g qout $end
$var reg 1 g qout_r $end
$scope begin LTCH_PROC $end
$upscope $end
$upscope $end
$upscope $end
$scope module ticket_pulser $end
$var wire 1 $ clk $end
$var wire 8 h in [7:0] $end
$var wire 1 0 lden $end
$var wire 8 i minus_one [7:0] $end
$var wire 8 j nxt_cnt [7:0] $end
$var wire 1 ! qout $end
$var wire 1 ) rst_n $end
$var wire 1 k pos $end
$var wire 8 l cur_cnt [7:0] $end
$scope module cnt_dffr $end
$var wire 1 $ clk $end
$var wire 8 m dnxt [7:0] $end
$var wire 1 ) rst_n $end
$var wire 8 n qout [7:0] $end
$var reg 8 o qout_r [7:0] $end
$scope begin DFFR_PROC $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 o
b0 n
b0 m
b0 l
0k
b0 j
b0 i
b0 h
xg
0f
b0 e
b0 d
b0 c
b0 b
b0 a
1`
b0 _
b0 ^
0]
b0 \
b0 [
b0 Z
b0 Y
b110101 X
b0 W
b0 V
0U
b10000 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
0B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
0:
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
00
b0 /
b0 .
b0 -
b10000 ,
b0 +
0*
0)
0(
0'
b10000 &
b0 %
0$
0#
0"
0!
$end
#500
0g
1$
#1000
0$
#1500
1$
#2000
b1 G
b1 J
b1 M
b1 P
1)
0$
#2500
1$
#3000
0$
#3500
1$
#4000
0$
#4500
1$
#5000
0$
#5500
1$
#6000
0$
#6500
1$
#7000
0$
#7500
1$
#8000
0$
#8500
1$
#9000
0$
#9500
1$
#10000
0$
#10500
1$
#11000
0$
#11500
1$
#12000
0`
b0 4
b0 ?
b0 6
b0 7
b10 X
b0 5
b0 _
b1 Y
b1 ^
b1 [
1]
b0 /
b0 b
b0 h
b11111010 e
b110 -
b110 V
b110 d
b11 3
b11 W
b11 a
b11111111 Z
b11111111 \
b11 %
b11 +
b11 S
1U
b1111 &
b1111 ,
b1111 T
0$
#12500
1$
#13000
b1 6
b1 7
b10 G
b10 J
b1 5
b1 _
b11111011 e
b1 .
b1 c
b1 2
b1 H
b1 I
b1 K
b1 L
1(
0$
#13500
1$
#14000
0(
0$
#14500
1$
#15000
b10 6
b10 7
b11 G
b11 J
b10 5
b10 _
b11111100 e
b10 .
b10 c
b10 2
b10 H
b10 I
b10 K
b10 L
1(
0$
#15500
1$
#16000
0(
0$
#16500
1$
#17000
b110 6
b110 7
b0 4
b0 ?
b11 /
b11 b
b11 h
b10 M
b10 P
b110 5
b110 _
1`
b110 e
b1100 .
b1100 c
b1 1
b1 N
b1 O
b1 Q
b1 R
1*
0$
#17500
1$
#18000
0*
0$
#18500
1$
#19000
b11 j
b11 m
b110 9
b110 <
10
1f
1'
0$
#19500
b10 j
b10 m
b101 9
b101 <
b10 i
b101 8
00
1!
1#
1k
b11 l
b11 n
b11 o
1:
b110 ;
b110 =
b110 >
1g
1$
#20000
0#
0!
0$
#20500
b1 j
b1 m
b100 9
b100 <
b1 i
b100 8
b10 l
b10 n
b10 o
b101 ;
b101 =
b101 >
1#
1!
1$
#21000
0f
0'
0#
0!
0$
#21500
b0 j
b0 m
b11 9
b11 <
b0 i
b11 8
b1 l
b1 n
b1 o
b100 ;
b100 =
b100 >
0g
1#
1!
1$
#22000
0#
0!
0$
#22500
b10 9
b10 <
b10 8
0k
b0 l
b0 n
b0 o
b11 ;
b11 =
b11 >
1#
0!
1$
#23000
0#
0$
#23500
b1 9
b1 <
b1 8
b10 ;
b10 =
b10 >
1#
1$
#24000
0#
0$
#24500
b0 9
b0 <
b0 8
b1 ;
b1 =
b1 >
1#
1$
#25000
0#
0$
#25500
0:
b0 ;
b0 =
b0 >
0#
1$
#26000
0$
#26500
1$
#27000
0$
#27500
1$
#28000
0$
#28500
1$
#29000
0$
#29500
1$
#30000
0$
#30500
1$
#31000
0$
#31500
1$
#32000
0$
#32500
1$
#33000
0$
#33500
1$
#34000
0$
#34500
1$
#35000
0$
#35500
1$
#36000
0$
#36500
1$
#37000
0$
#37500
1$
#38000
0$
#38500
1$
#39000
0$
#39500
1$
#40000
0$
#40500
1$
#41000
0$
